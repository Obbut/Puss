#!/bin/bash

DIRNAME=${PWD##*/}

if [ ! -d ".build" ]; then
	echo "❗️  Meow stores artifacts in the .build directory, but it is not present. Is the working directory a Swift package?"
	echo "Try running 'swift package update'"
	exit 1
fi

# Swift Package lookup
# Stores relative package URL in PACKAGE_DIR
lookupPackage () {
	local pkgName=$1
	
	if [[ $DIRNAME == "$pkgName" ]]; then
		PACKAGE_DIR="."
	elif [ -d "Packages/Meow" ]; then
		PACKAGE_DIR="Packages/$pkgName"
	else
		PACKAGE_DIR=$(echo ".build/checkouts/$pkgName.git"*)
		
		if [ ! -d $PACKAGE_DIR ]; then
			echo "❗️  Error: package $pkgName was not found"
			exit 1
		fi
	fi
}

lookupPackage Meow
MEOW=$PACKAGE_DIR

echo "🐈  Meow directory: $MEOW"

if [[ $1 == "init" ]]; then
	if [ -f MeowConfig ]; then
		echo "❗️  Error: MeowConfig already exists. Refusing to overwrite."
		exit 1
	fi
	
	cp "$MEOW/MeowConfig.template" "./MeowConfig"
	echo "🐈  Config file saved as MeowConfig"
	echo "Please edit the config file, then run 'meow' to generate code."
	
	exit 0
fi

if [ ! -f MeowConfig ]; then
	echo "❗️  Error: MeowConfig not found"
	echo "See the Meow documentation for information on creating a config file"
	echo "Run '$0 init' to create a basic config file"
	exit 1
fi

source "$MEOW/MeowConfig.defaults"

echo "🐈  Loading config file"
source "MeowConfig"

if [[ ${#plugins[@]} == 0 ]]; then
	echo "🐈  No plugins to resolve"
else
	echo "🐈  Resolving plugins"
fi

PLUGIN_NUM=0
for plugin in "${plugins[@]}"; do
	lookupPackage "$plugin"
	echo "$plugin found in $PACKAGE_DIR"
	PLUGINS[$PLUGIN_NUM]=$PACKAGE_DIR
	((PLUGIN_NUM=$PLUGIN_NUM+1))
done

# Create templates directory
if [ -d ".build/meow-templates" ]; then
	rm -r ".build/meow-templates"
fi

mkdir ".build/meow-templates"

# Copy templates
echo "🐈  Copying templates"
cp -r "$MEOW/Templates/" ".build/meow-templates/"

touch ".build/meow-templates/plugins.ejs"

for p in $PLUGINS; do
	echo "<%- include('../../$p/MeowPlugin.ejs') %>" >> ".build/meow-templates/plugins.ejs"
done

echo "🐈  Running sourcery"

sourcery --templates ".build/meow-templates/Meow.ejs" --sources "$sources" --output "$output" --args accesslevel=$accesslevel

echo "🐈  Done"